{"version":3,"sources":["contexts/UserContext.js","services/httpService.js","services/authService.js","components/headerBar.jsx","components/login.jsx","services/restaurantService.js","components/main.jsx","services/mealsService.js","components/meals.jsx","services/userService.js","services/orderService.js","components/checkout.jsx","components/orders.jsx","components/protectedRoute.jsx","components/userProfile.jsx","components/restaurantProfile.jsx","components/restaurantMeals.jsx","components/userRegister.jsx","components/restaurantRegister.jsx","components/notFound.jsx","components/App.js","index.js"],"names":["initialState","email","id","token","isAuthenticated","UserContext","createContext","axios","interceptors","request","use","config","localStorage","getItem","headers","http","get","post","put","delete","apiEndPoint","loginUser","userInfo","a","jwt","data","setItem","getLoggedInUser","loginRestaurant","restaurantInfo","status","removeItem","jwtDecode","HeaderBar","useContext","user","setUser","Navbar","className","bg","variant","expand","Brand","href","Image","style","height","src","Toggle","aria-controls","Nav","type","Link","firstName","lastName","name","Button","onClick","logout","setLocale","mixed","required","string","min","max","matches","schema","yup","shape","username","password","Login","history","useHistory","useState","serverErrorUser","setServerErrorUser","serverErrorRestaurant","setServerErrorRestaurant","useForm","resolver","yupResolver","registerUser","register","handleSubmitUser","handleSubmit","errorsUser","errors","registerRestaurant","handleSubmitRestaurant","errorsRestaurant","doSubmitUser","loggedInUser","push","response","doSubmitRestaurant","loggedInRestaurant","Form","onSubmit","FormControl","placeholder","ref","autoFocus","color","message","to","restData","getAllRestaurants","getRestaurant","restaurantId","restaurant","Main","restaurants","setRestaurants","search","setSearch","useEffect","value","onChange","target","filter","toLowerCase","includes","map","index","cursor","width","getMealsFromRestaurant","newMeal","meal","mealId","Meals","meals","setMeals","cart","setCart","setRestaurant","state","useLocation","routeParams","useParams","length","location","phone","replaceAll","price","lineHeight","padding","itemIndex","tempCart","item","removeFromCart","reduce","acc","currMeal","parseFloat","toFixed","pathname","getUserLocations","userId","getUser","userData","newLocation","locationName","locationId","getAllOrdersForUserId","userLocationId","orderId","getAllOrdersForRestaurantId","Checkout","userLocations","setUserLocations","redirecting","setRedirecting","e","preventDefault","locations","elements","userLocation","find","makeOrder","setTimeout","as","custom","disabled","FormCheck","label","defaultChecked","Orders","orders","setOrders","tempOrders","removeOrderFromList","order","orderIndex","deleteOrder","tempOrder","formatDate","date","d","Date","getHours","getMinutes","getDate","getUTCMonth","getFullYear","createdAt","listStyleType","orderMeals","mealIndex","ProtectedRoute","Component","component","rest","window","handleRedirect","UserProfile","editing","setEditing","form","setForm","setLocations","locationForm","setLocationForm","currUser","handleChange","Object","keys","findIndex","key","updateUser","Table","borderless","newLoc","InputGroup","Append","loc","tempLocations","retLoc","removeLocationFromUser","RestaurantProfile","currRest","updateRestaurant","notType","number","positive","RestaurantMeals","reset","tempMeals","tempMeal","FormLabel","deleteMeal","idx","repeatPassword","oneOf","UserRegister","doSubmit","formData","setMessage","Row","Col","RestaurantRegister","NotFound","App","Provider","Container","marginTop","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.927189a1.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const initialState = {\r\n  email: null,\r\n  id: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n};\r\n\r\nexport const UserContext = createContext(initialState);\r\n","import axios from \"axios\";\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  config.headers[\"x-access-token\"] = token;\r\n\r\n  return config;\r\n});\r\n\r\nconst http = {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { initialState } from \"../contexts/UserContext\";\r\n\r\nconst apiEndPoint = \"http://foody-njp.herokuapp.com/api\";\r\n\r\nexport async function loginUser(userInfo) {\r\n  const { data: jwt } = await http.post(apiEndPoint + \"/auth/user\", userInfo);\r\n\r\n  localStorage.setItem(\"token\", jwt);\r\n\r\n  return await getLoggedInUser();\r\n}\r\n\r\nexport async function loginRestaurant(restaurantInfo) {\r\n  const { data: jwt, status } = await http.post(\r\n    apiEndPoint + \"/auth/restaurant\",\r\n    restaurantInfo\r\n  );\r\n\r\n  localStorage.setItem(\"token\", jwt);\r\n\r\n  return await getLoggedInUser();\r\n}\r\n\r\nexport async function logout() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport async function getLoggedInUser() {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) return initialState;\r\n  else return { ...jwtDecode(token), isAuthenticated: true };\r\n}\r\n\r\nexport async function getJwtHeader() {\r\n  return { headers: localStorage.getItem(\"token\") };\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext, initialState } from \"../contexts/UserContext\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { logout } from \"../services/authService\";\r\n\r\nexport default function HeaderBar() {\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  return (\r\n    <Navbar className=\"fixed-top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"/\">\r\n        <Image\r\n          style={{ height: \"60px\" }}\r\n          className=\"img-responsive\"\r\n          src=\"/img/logo.png\"\r\n        ></Image>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Nav>\r\n        {user.type === \"user\" && (\r\n          <Nav.Link href=\"/restaurants\">Naruci</Nav.Link>\r\n        )}\r\n        {user.isAuthenticated && <Nav.Link href=\"/orders\">Narudzbe</Nav.Link>}\r\n        {user.type === \"restaurant\" && <Nav.Link href=\"/meals\">Jela</Nav.Link>}\r\n      </Nav>\r\n\r\n      <Nav className=\"ml-auto\">\r\n        {user.isAuthenticated ? (\r\n          <span className=\"text-center\">\r\n            <Nav.Link href=\"/profile\">\r\n              {user.firstName\r\n                ? user.firstName + \" \" + user.lastName\r\n                : user.name}\r\n            </Nav.Link>\r\n            <Button\r\n              onClick={() => {\r\n                logout();\r\n                setUser(initialState);\r\n              }}\r\n            >\r\n              Odjava\r\n            </Button>\r\n          </span>\r\n        ) : (\r\n          <Button href=\"/login\">Login</Button>\r\n        )}\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { loginRestaurant, loginUser } from \"../services/authService\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport * as yup from \"yup\";\r\nimport { setLocale } from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nsetLocale({\r\n  mixed: {\r\n    required: \"Polje ne smije biti prazno.\",\r\n  },\r\n  string: {\r\n    email: \"Polje mora sadrzavati vazecu e-mail adresu.\",\r\n    min: \"Polje mora sadrzavati minimalno ${min} znakova.\",\r\n    max: \"Polje mora sadrzavati maksimalno ${max} znakova.\",\r\n    matches: \"Polje mora sadrzavati minimalno 1 broj.\",\r\n  },\r\n});\r\n\r\nconst schema = yup.object().shape({\r\n  username: yup.string().required().min(4).max(30),\r\n  password: yup.string().required().min(8),\r\n});\r\n\r\nexport default function Login() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [serverErrorUser, setServerErrorUser] = useState(\"\");\r\n  const [serverErrorRestaurant, setServerErrorRestaurant] = useState(\"\");\r\n\r\n  const {\r\n    register: registerUser,\r\n    handleSubmit: handleSubmitUser,\r\n    errors: errorsUser,\r\n  } = useForm({ resolver: yupResolver(schema) });\r\n\r\n  const {\r\n    register: registerRestaurant,\r\n    handleSubmit: handleSubmitRestaurant,\r\n    errors: errorsRestaurant,\r\n  } = useForm({ resolver: yupResolver(schema) });\r\n\r\n  const doSubmitUser = async ({ username, password }) => {\r\n    setServerErrorUser(\"\");\r\n\r\n    try {\r\n      const loggedInUser = await loginUser({ username, password });\r\n      setUser(loggedInUser);\r\n      history.push(\"/restaurants\");\r\n    } catch (e) {\r\n      setServerErrorUser(e.response.data);\r\n    }\r\n  };\r\n\r\n  const doSubmitRestaurant = async ({ username, password }) => {\r\n    setServerErrorRestaurant(\"\");\r\n\r\n    try {\r\n      const loggedInRestaurant = await loginRestaurant({ username, password });\r\n      setUser(loggedInRestaurant);\r\n      history.push(\"/orders\");\r\n    } catch (e) {\r\n      setServerErrorRestaurant(e.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <a href=\"/\">\r\n        <Image style={{ height: \"300px\" }} src=\"img/logo.png\"></Image>\r\n      </a>\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          <h3>Korisnicka prijava</h3>\r\n          <Form onSubmit={handleSubmitUser(doSubmitUser)}>\r\n            <FormControl\r\n              name=\"username\"\r\n              placeholder=\"Korisnicko ime\"\r\n              ref={registerUser}\r\n              autoFocus\r\n            />\r\n            <p style={{ color: \"red\" }}>{errorsUser.username?.message}</p>\r\n\r\n            <FormControl\r\n              type=\"password\"\r\n              name=\"password\"\r\n              ref={registerUser}\r\n              placeholder=\"Lozinka\"\r\n            />\r\n            <p style={{ color: \"red\" }}>{errorsUser.password?.message}</p>\r\n            <p style={{ color: \"red\" }}>{serverErrorUser}</p>\r\n\r\n            <div className=\"d-flex\">\r\n              <Button variant=\"success\" type=\"submit\">\r\n                Prijava\r\n              </Button>\r\n              <Link className=\"ml-auto\" to=\"/register_user\">\r\n                <Button>Registracija</Button>\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n\r\n        <div className=\"offset-4 col-4\">\r\n          <h3>Restoran prijava</h3>\r\n          <Form onSubmit={handleSubmitRestaurant(doSubmitRestaurant)}>\r\n            <FormControl\r\n              name=\"username\"\r\n              placeholder=\"Korisnicko ime\"\r\n              ref={registerRestaurant}\r\n            />\r\n            <p style={{ color: \"red\" }}>{errorsRestaurant.username?.message}</p>\r\n\r\n            <FormControl\r\n              type=\"password\"\r\n              name=\"password\"\r\n              ref={registerRestaurant}\r\n              placeholder=\"Lozinka\"\r\n            />\r\n            <p style={{ color: \"red\" }}>{errorsRestaurant.password?.message}</p>\r\n            <p style={{ color: \"red\" }}>{serverErrorRestaurant}</p>\r\n\r\n            <div className=\"d-flex\">\r\n              <Button variant=\"success\" type=\"submit\">\r\n                Prijava\r\n              </Button>\r\n              <Link className=\"ml-auto\" to=\"/register_restaurant\">\r\n                <Button>Registracija</Button>\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"http://foody-njp.herokuapp.com/api\";\r\n\r\nasync function registerRestaurant(restData) {\r\n  const { data } = await http.post(apiEndPoint + \"/restaurants\", restData);\r\n\r\n  return data;\r\n}\r\n\r\nasync function getAllRestaurants() {\r\n  const { data } = await http.get(apiEndPoint + \"/restaurants\");\r\n\r\n  return data;\r\n}\r\n\r\nasync function getRestaurant(restaurantId) {\r\n  const { data } = await http.get(apiEndPoint + \"/restaurants/\" + restaurantId);\r\n\r\n  return data;\r\n}\r\n\r\nasync function updateRestaurant(restaurant) {\r\n  const { data } = await http.put(\r\n    apiEndPoint + \"/restaurants/\" + restaurant.id,\r\n    restaurant\r\n  );\r\n\r\n  return data;\r\n}\r\n\r\nexport {\r\n  getAllRestaurants,\r\n  getRestaurant,\r\n  updateRestaurant,\r\n  registerRestaurant,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getAllRestaurants } from \"../services/restaurantService\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nexport default function Main() {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(async () => {\r\n    setRestaurants(await getAllRestaurants());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <FormControl\r\n          value={search}\r\n          onChange={({ target }) => setSearch(target.value)}\r\n          placeholder=\"Pretraga\"\r\n        ></FormControl>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        {restaurants\r\n          .filter((restaurant) =>\r\n            restaurant.name.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .map((restaurant, index) => (\r\n            <div\r\n              className=\"col-4 my-2 text-center align-middle\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => history.push(\"/restaurant/\" + restaurant.id)}\r\n              key={index}\r\n            >\r\n              <div\r\n                style={{ width: \"1%\", height: \"200px\" }}\r\n                className=\"d-table-cell border rounded align-middle\"\r\n              >\r\n                {restaurant.name}\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"http://foody-njp.herokuapp.com/api\";\r\n\r\nexport async function getMealsFromRestaurant(restaurantId) {\r\n  const { data } = await http.get(apiEndPoint + \"/meals/\" + restaurantId);\r\n\r\n  return data;\r\n}\r\n\r\nexport async function newMeal(meal) {\r\n  const { data } = await http.post(\r\n    apiEndPoint + \"/meals/\" + meal.restaurantId,\r\n    meal\r\n  );\r\n\r\n  return data;\r\n}\r\n\r\nexport async function deleteMeal(mealId) {\r\n  const { data } = await http.delete(apiEndPoint + \"/meals/\" + mealId);\r\n\r\n  return data;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport { getMealsFromRestaurant } from \"../services/mealsService\";\r\n\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { getRestaurant } from \"../services/restaurantService\";\r\n\r\nexport default function Meals() {\r\n  const [meals, setMeals] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [restaurant, setRestaurant] = useState({});\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const { state } = useLocation();\r\n  const routeParams = useParams();\r\n\r\n  useEffect(async () => {\r\n    if (state && state.length !== 0) setCart(state);\r\n    setMeals(await getMealsFromRestaurant(routeParams.restaurantId));\r\n\r\n    setRestaurant(await getRestaurant(routeParams.restaurantId));\r\n  }, []);\r\n\r\n  const removeFromCart = (itemIndex) => {\r\n    let tempCart = [...cart];\r\n\r\n    tempCart = tempCart.filter((item, index) => index !== itemIndex);\r\n    setCart(tempCart);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\" style={{ height: \"300px\" }}>\r\n        <div className=\"col border rounded\">\r\n          <h2 className=\"mt-3\">{restaurant.name}</h2>\r\n          <h4>{restaurant.location}</h4>\r\n          <h5>{restaurant.phone}</h5>\r\n        </div>\r\n\r\n        {restaurant.location && (\r\n          <div className=\"col embed-responsive embed-responisve-16by9\">\r\n            <iframe\r\n              className=\"embed-responsive-item\"\r\n              src={\r\n                \"https://www.google.com/maps/embed/v1/place?key=AIzaSyAs6Spn2fVVaFd9wvza8ZxdEESemGLyy2k&q=\" +\r\n                restaurant.location.replaceAll(\" \", \"+\")\r\n              }\r\n            ></iframe>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <hr />\r\n          <h2>Ponuda</h2>\r\n          <FormControl\r\n            value={search}\r\n            onChange={({ target }) => setSearch(target.value)}\r\n            placeholder=\"Pretraga\"\r\n          ></FormControl>\r\n\r\n          {meals\r\n            .filter((meal) =>\r\n              meal.name.toLowerCase().includes(search.toLowerCase())\r\n            )\r\n            .map((meal, index) => (\r\n              <div className=\"border border-dark rounded p-2 my-2\" key={index}>\r\n                <p>\r\n                  <strong>{meal.name}</strong>\r\n                  <br />\r\n                  {meal.price + \" kn\"}\r\n                </p>\r\n                <Button onClick={() => setCart([...cart, meal])}>\r\n                  Dodaj u kosaricu\r\n                </Button>\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n        {cart.length !== 0 && (\r\n          <div className=\"col-2\">\r\n            <h2>Kosarica</h2>\r\n\r\n            {cart.map((meal, index) => (\r\n              <div className=\"border rounded my-2 p-1\" key={index}>\r\n                <Button\r\n                  style={{ lineHeight: \"0\", padding: \"15px 9px\" }}\r\n                  variant=\"danger\"\r\n                  onClick={() => {\r\n                    removeFromCart(index);\r\n                  }}\r\n                >\r\n                  ✕\r\n                </Button>\r\n                <span className=\"ml-2\">{\" \" + meal.name}</span>\r\n              </div>\r\n            ))}\r\n\r\n            <h3>\r\n              Ukupno:{\" \"}\r\n              {cart\r\n                .reduce((acc, currMeal) => acc + parseFloat(currMeal.price), 0)\r\n                .toFixed(2)}{\" \"}\r\n              kn\r\n            </h3>\r\n\r\n            <Link\r\n              to={{\r\n                pathname: \"/checkout\",\r\n                state: cart,\r\n                restaurantId: routeParams.restaurantId,\r\n              }}\r\n            >\r\n              <Button>Naruci</Button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"http://foody-njp.herokuapp.com/api\";\r\n\r\nasync function registerUser(userInfo) {\r\n  await http.post(apiEndPoint + \"/users\", userInfo);\r\n}\r\n\r\nasync function getUserLocations(userId) {\r\n  const { data } = await http.get(apiEndPoint + \"/user_locations/\" + userId);\r\n\r\n  return data;\r\n}\r\n\r\nfunction getLocationIdFromName(locations, locationName) {\r\n  return locations.find((location) => locationName === location.name).id;\r\n}\r\n\r\nasync function getUser(userId) {\r\n  const { data } = await http.get(apiEndPoint + \"/users/\" + userId);\r\n\r\n  return data;\r\n}\r\n\r\nasync function updateUser(userData) {\r\n  const { data } = await http.put(\r\n    apiEndPoint + \"/users/\" + userData.id,\r\n    userData\r\n  );\r\n\r\n  return data;\r\n}\r\n\r\nasync function newLocation(userId, locationName) {\r\n  const { data } = await http.post(apiEndPoint + \"/user_locations/\" + userId, {\r\n    name: locationName,\r\n  });\r\n\r\n  return data;\r\n}\r\n\r\nasync function removeLocationFromUser(locationId) {\r\n  http.delete(apiEndPoint + \"/user_locations/\" + locationId);\r\n}\r\n\r\nexport {\r\n  registerUser,\r\n  getUserLocations,\r\n  getLocationIdFromName,\r\n  updateUser,\r\n  getUser,\r\n  newLocation,\r\n  removeLocationFromUser,\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"http://foody-njp.herokuapp.com/api\";\r\n\r\nexport async function getAllOrdersForUserId(userId) {\r\n  const { data } = await http.get(apiEndPoint + \"/orders/user/\" + userId);\r\n\r\n  return data;\r\n}\r\n\r\nexport async function makeOrder(\r\n  meals,\r\n  userId,\r\n  restaurantId,\r\n  userLocationId,\r\n  price\r\n) {\r\n  const { data } = await http.post(apiEndPoint + \"/orders\", {\r\n    meals,\r\n    userId,\r\n    restaurantId,\r\n    userLocationId,\r\n    price,\r\n  });\r\n}\r\n\r\nexport async function deleteOrder(orderId) {\r\n  await http.delete(apiEndPoint + \"/orders/\" + orderId);\r\n}\r\n\r\nexport async function getAllOrdersForRestaurantId(restaurantId) {\r\n  const { data } = await http.get(\r\n    apiEndPoint + \"/orders/restaurant/\" + restaurantId\r\n  );\r\n\r\n  return data;\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  getUserLocations,\r\n  getLocationIdFromName,\r\n} from \"../services/userService\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport FormCheck from \"react-bootstrap/FormCheck\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { makeOrder } from \"../services/orderService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Checkout() {\r\n  const user = useContext(UserContext)[0];\r\n  const { state: cart } = useLocation();\r\n  const { restaurantId } = useLocation();\r\n  const [userLocations, setUserLocations] = useState([]);\r\n  const [redirecting, setRedirecting] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(async () => {\r\n    const userLocations = await getUserLocations(user.id);\r\n\r\n    setUserLocations(userLocations);\r\n  }, []);\r\n\r\n  const submitOrder = (e) => {\r\n    e.preventDefault();\r\n\r\n    const locationId = getLocationIdFromName(\r\n      userLocations,\r\n      e.target.elements.userLocation.value\r\n    );\r\n\r\n    const price = cart\r\n      .reduce((acc, currMeal) => acc + parseFloat(currMeal.price), 0)\r\n      .toFixed(2);\r\n\r\n    makeOrder(cart, user.id, restaurantId, locationId, price);\r\n\r\n    setTimeout(() => {\r\n      history.push(\"/orders\");\r\n    }, 3000);\r\n\r\n    setRedirecting(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Narudzba:</h3>\r\n      {cart.map((meal, index) => (\r\n        <div key={index}>{meal.name}</div>\r\n      ))}\r\n      {cart.length !== 0 && (\r\n        <h3>\r\n          Total:{\" \"}\r\n          {cart\r\n            .reduce((acc, currMeal) => acc + parseFloat(currMeal.price), 0)\r\n            .toFixed(2)}{\" \"}\r\n          kn\r\n        </h3>\r\n      )}\r\n      <hr />\r\n      <h5>Adresa dostave:</h5>\r\n      <Form onSubmit={submitOrder}>\r\n        <FormControl\r\n          name=\"userLocation\"\r\n          as=\"select\"\r\n          custom\r\n          disabled={userLocations.length === 0}\r\n        >\r\n          {userLocations.map((userLocation, index) => (\r\n            <option key={index}>{userLocation.name}</option>\r\n          ))}\r\n        </FormControl>\r\n        <p style={{ color: \"red\" }}>\r\n          {userLocations.length === 0 &&\r\n            \"Potrebno je dodati barem jednu adresu na profilu. (U gornje desnom kutu)\"}\r\n        </p>\r\n\r\n        <FormCheck\r\n          label=\"Plati gotovinom\"\r\n          type=\"radio\"\r\n          id=\"cash\"\r\n          name=\"pay-method\"\r\n          defaultChecked\r\n        ></FormCheck>\r\n        <FormCheck\r\n          label=\"Plati karticom\"\r\n          type=\"radio\"\r\n          id=\"card\"\r\n          name=\"pay-method\"\r\n          disabled\r\n        ></FormCheck>\r\n\r\n        {!redirecting && (\r\n          <div>\r\n            <Button\r\n              variant=\"success\"\r\n              type=\"submit\"\r\n              disabled={userLocations.length === 0}\r\n            >\r\n              Naruci\r\n            </Button>\r\n            <Link\r\n              to={{\r\n                pathname: \"/restaurant/\" + restaurantId,\r\n                state: cart,\r\n              }}\r\n            >\r\n              <Button>Povratak</Button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </Form>\r\n\r\n      {redirecting && <p>Slanje narudzbe... Bit cete uskoro preusmjereni.</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport {\r\n  deleteOrder,\r\n  getAllOrdersForUserId,\r\n  getAllOrdersForRestaurantId,\r\n} from \"../services/orderService\";\r\n\r\nexport default function Orders() {\r\n  const user = useContext(UserContext)[0];\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    let tempOrders = [];\r\n    if (user.type === \"user\") tempOrders = await getAllOrdersForUserId(user.id);\r\n    else tempOrders = await getAllOrdersForRestaurantId(user.id);\r\n\r\n    setOrders(tempOrders);\r\n  }, []);\r\n\r\n  const removeOrderFromList = (order, orderIndex) => {\r\n    let tempOrders = [...orders];\r\n\r\n    deleteOrder(order.id);\r\n    tempOrders = tempOrders.filter((tempOrder) => tempOrder.id !== order.id);\r\n\r\n    setOrders(tempOrders);\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n\r\n    return `${d.getHours()}:${d.getMinutes()} ${d.getDate()}.${\r\n      d.getUTCMonth() + 1\r\n    }.${d.getFullYear()}.`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {orders.map((order, index) => (\r\n        <div className=\"border border-dark rounded p-2 my-2\" key={index}>\r\n          {user.type === \"user\" ? (\r\n            <h4>{order.restaurant.name}</h4>\r\n          ) : (\r\n            <h4>{order.user.firstName + \" \" + order.user.lastName}</h4>\r\n          )}\r\n\r\n          <p>\r\n            <strong>Adresa dostave:</strong> {order.userLocation.name}\r\n            <br />\r\n            <strong>Vrijeme narudzbe: </strong> {formatDate(order.createdAt)}\r\n            <br />\r\n            <strong>Cijena:</strong> {order.price} kn\r\n          </p>\r\n          <p>\r\n            <strong>Status:</strong> {order.status}\r\n          </p>\r\n\r\n          <ul style={{ listStyleType: \"none\" }}>\r\n            {order.orderMeals.map((meal, mealIndex) => (\r\n              <li key={mealIndex}>{meal.meal.name}</li>\r\n            ))}\r\n          </ul>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={() => removeOrderFromList(order, index)}\r\n          >\r\n            {order.status === \"Dostavljeno\"\r\n              ? \"Izbrisi narudzbu\"\r\n              : \"Otkazi narudzbu\"}\r\n          </Button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\n\r\nexport default function ProtectedRoute({ component: Component, ...rest }) {\r\n  const user = useContext(UserContext)[0];\r\n  const location = useLocation();\r\n\r\n  const handleRedirect = () => {\r\n    if (!user.isAuthenticated) return <Redirect to=\"/login\" />;\r\n    if (rest.type) {\r\n      if (user.type !== rest.type || window.location.pathname === \"/\") {\r\n        if (user.type === \"user\") return <Redirect to=\"/restaurants\" />;\r\n        if (user.type === \"restaurant\") return <Redirect to=\"/orders\" />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Route {...rest}>\r\n        <Component />\r\n      </Route>\r\n    );\r\n  };\r\n\r\n  return <div>{handleRedirect()}</div>;\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport {\r\n  updateUser,\r\n  getUser,\r\n  getUserLocations,\r\n  removeLocationFromUser,\r\n  newLocation,\r\n} from \"../services/userService\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\nexport default function UserProfile() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [editing, setEditing] = useState(false);\r\n  const [form, setForm] = useState({});\r\n  const [locations, setLocations] = useState([]);\r\n  const [locationForm, setLocationForm] = useState(\"\");\r\n\r\n  useEffect(async () => {\r\n    const currUser = await getUser(user.id);\r\n    const userLocations = await getUserLocations(user.id);\r\n\r\n    setForm({\r\n      firstName: currUser.firstName,\r\n      lastName: currUser.lastName,\r\n      phone: currUser.phone,\r\n    });\r\n    setLocations(userLocations);\r\n  }, []);\r\n\r\n  const handleChange = ({ target }) =>\r\n    setForm({ ...form, [target.name]: target.value });\r\n\r\n  const handleSubmit = () => {\r\n    if (\r\n      Object.keys(form).findIndex(\r\n        (key) => form[key] === \"\" && key !== \"phone\"\r\n      ) === -1\r\n    ) {\r\n      setEditing(false);\r\n      updateUser({ ...form, id: user.id });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Profil</h2>\r\n      {editing ? (\r\n        <Button onClick={() => handleSubmit()}>Spremi promjene</Button>\r\n      ) : (\r\n        <Button onClick={() => setEditing(true)}>Promijeni</Button>\r\n      )}\r\n      <Table borderless>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <strong>Ime</strong>\r\n              <br />\r\n              {editing ? (\r\n                <FormControl\r\n                  name=\"firstName\"\r\n                  onChange={handleChange}\r\n                  value={form.firstName}\r\n                ></FormControl>\r\n              ) : (\r\n                form.firstName\r\n              )}\r\n              {}\r\n            </td>\r\n            <td>\r\n              <strong>Prezime</strong>\r\n              <br />\r\n              {editing ? (\r\n                <FormControl\r\n                  name=\"lastName\"\r\n                  onChange={handleChange}\r\n                  value={form.lastName}\r\n                ></FormControl>\r\n              ) : (\r\n                form.lastName\r\n              )}\r\n            </td>\r\n            <td>\r\n              <strong>Broj</strong>\r\n              <br />\r\n              {editing ? (\r\n                <FormControl\r\n                  name=\"phone\"\r\n                  onChange={handleChange}\r\n                  value={form.phone}\r\n                ></FormControl>\r\n              ) : (\r\n                form.phone\r\n              )}\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>\r\n              <strong>Korisnicko ime</strong>\r\n              <br />\r\n              {user.username}\r\n            </td>\r\n            <td>\r\n              <strong>E-mail</strong>\r\n              <br />\r\n              {user.email}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <h2>Adrese</h2>\r\n      <Form\r\n        onSubmit={async (e) => {\r\n          e.preventDefault();\r\n          if (locationForm.length === 0) return;\r\n          const newLoc = await newLocation(user.id, locationForm);\r\n\r\n          setLocations([...locations, newLoc]);\r\n          setLocationForm(\"\");\r\n        }}\r\n      >\r\n        <InputGroup>\r\n          <FormControl\r\n            onChange={({ target }) => setLocationForm(target.value)}\r\n            value={locationForm}\r\n          ></FormControl>\r\n          <InputGroup.Append>\r\n            <Button\r\n              variant=\"success\"\r\n              type=\"submit\"\r\n              disabled={locationForm.length === 0}\r\n            >\r\n              Dodaj\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </Form>\r\n      <div style={{ lineHeight: \"3\" }}>\r\n        {locations.map((loc, index) => (\r\n          <div className=\"border rounded my-2 p-1\" key={index}>\r\n            <Button\r\n              style={{ lineHeight: \"0\", padding: \"15px 9px\" }}\r\n              variant=\"danger\"\r\n              onClick={() => {\r\n                let tempLocations = locations.filter(\r\n                  (retLoc) => retLoc.id !== locations[index].id\r\n                );\r\n\r\n                setLocations(tempLocations);\r\n                removeLocationFromUser(locations[index].id);\r\n              }}\r\n            >\r\n              ✕\r\n            </Button>\r\n            <span className=\"ml-2\">{\" \" + loc.name}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { getRestaurant, updateRestaurant } from \"../services/restaurantService\";\r\n\r\nexport default function RestaurantProfile() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [editing, setEditing] = useState(false);\r\n  const [form, setForm] = useState({});\r\n\r\n  useEffect(async () => {\r\n    const currRest = await getRestaurant(user.id);\r\n\r\n    setForm({\r\n      name: currRest.name,\r\n      location: currRest.location,\r\n      phone: currRest.phone,\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = ({ target }) =>\r\n    setForm({ ...form, [target.name]: target.value });\r\n\r\n  const handleSubmit = () => {\r\n    if (Object.keys(form).findIndex((key) => form[key] === \"\") === -1) {\r\n      setEditing(false);\r\n      updateRestaurant({ ...form, id: user.id });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Profil</h2>\r\n      {editing ? (\r\n        <Button onClick={() => handleSubmit()}>Spremi promjene</Button>\r\n      ) : (\r\n        <Button onClick={() => setEditing(true)}>Promijeni</Button>\r\n      )}\r\n      <Table borderless>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <strong>Ime</strong>\r\n              <br />\r\n              {editing ? (\r\n                <FormControl\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                  value={form.name}\r\n                ></FormControl>\r\n              ) : (\r\n                form.name\r\n              )}\r\n              {}\r\n            </td>\r\n            <td>\r\n              <strong>Adresa</strong>\r\n              <br />\r\n              {editing ? (\r\n                <FormControl\r\n                  name=\"location\"\r\n                  onChange={handleChange}\r\n                  value={form.location}\r\n                ></FormControl>\r\n              ) : (\r\n                form.location\r\n              )}\r\n            </td>\r\n            <td>\r\n              <strong>Broj</strong>\r\n              <br />\r\n              {editing ? (\r\n                <FormControl\r\n                  name=\"phone\"\r\n                  onChange={handleChange}\r\n                  value={form.phone}\r\n                ></FormControl>\r\n              ) : (\r\n                form.phone\r\n              )}\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>\r\n              <strong>Username</strong>\r\n              <br />\r\n              {user.username}\r\n            </td>\r\n            <td>\r\n              <strong>E-mail</strong>\r\n              <br />\r\n              {user.email}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport {\r\n  getMealsFromRestaurant,\r\n  newMeal,\r\n  deleteMeal,\r\n} from \"../services/mealsService\";\r\nimport * as yup from \"yup\";\r\nimport { setLocale } from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport FormLabel from \"react-bootstrap/FormLabel\";\r\n\r\nsetLocale({\r\n  mixed: {\r\n    required: \"Polje ne smije biti prazno.\",\r\n    notType: \"Broj mora biti vazeci.\",\r\n  },\r\n  number: {\r\n    max: \"Polje smije sadrzavati maksimalno 6 znakova\",\r\n    positive: \"Broj mora biti vazeci.\",\r\n  },\r\n});\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  price: yup.number().required().max(999999).positive(),\r\n});\r\n\r\nexport default function RestaurantMeals() {\r\n  const user = useContext(UserContext)[0];\r\n  const [meals, setMeals] = useState([]);\r\n  const { register, handleSubmit, errors, reset } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  useEffect(async () => {\r\n    const tempMeals = await getMealsFromRestaurant(user.id);\r\n\r\n    setMeals(tempMeals);\r\n  }, []);\r\n\r\n  const onSubmit = async ({ name, price }) => {\r\n    const tempMeal = await newMeal({\r\n      name,\r\n      price: parseFloat(price).toFixed(2),\r\n      restaurantId: user.id,\r\n    });\r\n\r\n    setMeals([...meals, tempMeal]);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <FormLabel>Ime jela</FormLabel>\r\n        <FormControl name=\"name\" ref={register}></FormControl>\r\n        <p>{errors.name?.message}</p>\r\n\r\n        <FormLabel>Cijena jela</FormLabel>\r\n        <FormControl name=\"price\" ref={register}></FormControl>\r\n        <p>{errors.price?.message}</p>\r\n\r\n        <Button type=\"submit\" variant=\"success\">\r\n          Dodaj jelo\r\n        </Button>\r\n      </Form>\r\n      {meals.map((meal, index) => (\r\n        <div className=\"border border-dark rounded p-2 my-2\" key={index}>\r\n          <p>\r\n            <strong>{meal.name}</strong>\r\n            <br />\r\n            {parseFloat(meal.price).toFixed(2) + \" kn\"}\r\n            <Button\r\n              className=\"float-right\"\r\n              style={{ lineHeight: \"0\", padding: \"15px 9px\" }}\r\n              variant=\"danger\"\r\n              onClick={() => {\r\n                deleteMeal(meal.id);\r\n                let tempMeals = [...meals];\r\n\r\n                tempMeals = tempMeals.filter((item, idx) => index !== idx);\r\n                setMeals(tempMeals);\r\n              }}\r\n            >\r\n              ✕\r\n            </Button>\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { setLocale } from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { registerUser } from \"../services/userService\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nsetLocale({\r\n  mixed: {\r\n    required: \"Polje ne smije biti prazno.\",\r\n  },\r\n  string: {\r\n    email: \"Polje mora sadrzavati vazecu e-mail adresu.\",\r\n    min: \"Polje mora sadrzavati minimalno ${min} znakova.\",\r\n    max: \"Polje mora sadrzavati maksimalno ${max} znakova.\",\r\n    matches: \"Polje mora sadrzavati minimalno 1 broj.\",\r\n  },\r\n});\r\n\r\nconst schema = yup.object().shape({\r\n  username: yup.string().required().min(4).max(30),\r\n  email: yup.string().required().email(),\r\n  password: yup\r\n    .string()\r\n    .required()\r\n    .min(8)\r\n    .matches(/[0-9]+/g),\r\n  repeatPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\")], \"Lozinke se moraju podudarati\"),\r\n  firstName: yup.string().required(),\r\n  lastName: yup.string().required(),\r\n});\r\n\r\nexport default function UserRegister() {\r\n  const doSubmit = async (formData) => {\r\n    setMessage(null);\r\n    try {\r\n      await registerUser(formData);\r\n      setMessage({\r\n        message: \"Uspjesna registracija. Preusmjeravanje na prijavu...\",\r\n        style: \"lime\",\r\n      });\r\n      setTimeout(() => history.push(\"/login\"), 2500);\r\n    } catch (e) {\r\n      setMessage({ message: e.response.data, style: \"red\" });\r\n    }\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <a href=\"/\">\r\n        <Image style={{ height: \"300px\" }} src=\"img/logo.png\"></Image>\r\n      </a>\r\n      <Form className=\"offset-3 col-6\" onSubmit={handleSubmit(doSubmit)}>\r\n        <FormControl\r\n          name=\"username\"\r\n          ref={register}\r\n          placeholder=\"Korisnicko ime\"\r\n        />\r\n        <p style={{ color: \"red\" }}>{errors.username?.message}</p>\r\n\r\n        <FormControl name=\"email\" ref={register} placeholder=\"E-mail\" />\r\n        <p style={{ color: \"red\" }}>{errors.email?.message}</p>\r\n\r\n        <FormControl\r\n          type=\"password\"\r\n          name=\"password\"\r\n          ref={register}\r\n          placeholder=\"Lozinka\"\r\n        />\r\n        <p style={{ color: \"red\" }}>{errors.password?.message}</p>\r\n        <FormControl\r\n          type=\"password\"\r\n          name=\"repeatPassword\"\r\n          ref={register}\r\n          placeholder=\"Ponovi lozinku\"\r\n        />\r\n        <p style={{ color: \"red\" }}>{errors.repeatPassword?.message}</p>\r\n\r\n        <Form.Row>\r\n          <Col>\r\n            <FormControl name=\"firstName\" ref={register} placeholder=\"Ime\" />\r\n            <p style={{ color: \"red\" }}>{errors.firstName?.message}</p>\r\n          </Col>\r\n\r\n          <Col>\r\n            <FormControl name=\"lastName\" ref={register} placeholder=\"Prezime\" />\r\n            <p style={{ color: \"red\" }}>{errors.lastName?.message}</p>\r\n          </Col>\r\n        </Form.Row>\r\n\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Registracija\r\n        </Button>\r\n        {message && (\r\n          <div style={{ color: message.style }}>{message.message}</div>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { setLocale } from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { registerRestaurant } from \"../services/restaurantService\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nsetLocale({\r\n  mixed: {\r\n    required: \"Polje ne smije biti prazno.\",\r\n  },\r\n  string: {\r\n    email: \"Polje mora sadrzavati vazecu e-mail adresu.\",\r\n    min: \"Polje mora sadrzavati minimalno ${min} znakova.\",\r\n    max: \"Polje mora sadrzavati maksimalno ${max} znakova.\",\r\n    matches: \"Polje mora sadrzavati minimalno 1 broj.\",\r\n  },\r\n});\r\n\r\nconst schema = yup.object().shape({\r\n  username: yup.string().required().min(4).max(30),\r\n  email: yup.string().required().email(),\r\n  password: yup\r\n    .string()\r\n    .required()\r\n    .min(8)\r\n    .matches(/[0-9]+/g),\r\n  repeatPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\")], \"Lozinke se moraju podudarati\"),\r\n  name: yup.string().required(),\r\n  location: yup.string().required(),\r\n  phone: yup.string().required(),\r\n});\r\n\r\nexport default function RestaurantRegister() {\r\n  const doSubmit = async (formData) => {\r\n    setMessage(null);\r\n    try {\r\n      await registerRestaurant(formData);\r\n      setMessage({\r\n        message: \"Uspjesna registracija. Preusmjeravanje na prijavu...\",\r\n        style: \"lime\",\r\n      });\r\n      setTimeout(() => history.push(\"/login\"), 2500);\r\n    } catch (e) {\r\n      setMessage({ message: e.response.data, style: \"red\" });\r\n    }\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <a href=\"/\">\r\n        <Image style={{ height: \"300px\" }} src=\"img/logo.png\"></Image>\r\n      </a>\r\n      <Form className=\"offset-3 col-6\" onSubmit={handleSubmit(doSubmit)}>\r\n        <FormControl\r\n          name=\"username\"\r\n          ref={register}\r\n          placeholder=\"Korisnicko ime\"\r\n        />\r\n        <p style={{ color: \"red\" }}>{errors.username?.message}</p>\r\n\r\n        <FormControl name=\"email\" ref={register} placeholder=\"E-mail\" />\r\n        <p style={{ color: \"red\" }}>{errors.email?.message}</p>\r\n\r\n        <FormControl\r\n          type=\"password\"\r\n          name=\"password\"\r\n          ref={register}\r\n          placeholder=\"Lozinka\"\r\n        />\r\n        <p style={{ color: \"red\" }}>{errors.password?.message}</p>\r\n        <FormControl\r\n          type=\"password\"\r\n          name=\"repeatPassword\"\r\n          ref={register}\r\n          placeholder=\"Ponovi lozinku\"\r\n        />\r\n        <p style={{ color: \"red\" }}>{errors.repeatPassword?.message}</p>\r\n\r\n        <FormControl name=\"name\" ref={register} placeholder=\"Ime restorana\" />\r\n        <p style={{ color: \"red\" }}>{errors.name?.message}</p>\r\n\r\n        <Form.Row>\r\n          <Col>\r\n            <FormControl\r\n              name=\"location\"\r\n              ref={register}\r\n              placeholder=\"Adresa restorana\"\r\n            />\r\n            <p style={{ color: \"red\" }}>{errors.location?.message}</p>\r\n          </Col>\r\n\r\n          <Col>\r\n            <FormControl\r\n              name=\"phone\"\r\n              ref={register}\r\n              placeholder=\"Broj restorana\"\r\n            />\r\n            <p style={{ color: \"red\" }}>{errors.phone?.message}</p>\r\n          </Col>\r\n        </Form.Row>\r\n\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Registracija\r\n        </Button>\r\n        {message && (\r\n          <div style={{ color: message.style }}>{message.message}</div>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <a href=\"/\">\r\n        <Image style={{ height: \"300px\" }} src=\"img/logo.png\"></Image>\r\n      </a>\r\n      <br />\r\n      <p>Stranica nije pronadena.</p>\r\n    </div>\r\n  );\r\n}\r\n","import \"bootswatch/dist/darkly/bootstrap.min.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport HeaderBar from \"./headerBar\";\r\nimport Login from \"./login\";\r\nimport Main from \"./main\";\r\nimport Meals from \"./meals\";\r\nimport Checkout from \"./checkout\";\r\nimport Orders from \"./orders\";\r\nimport { getLoggedInUser } from \"../services/authService\";\r\nimport ProtectedRoute from \"./protectedRoute\";\r\nimport UserProfile from \"./userProfile\";\r\nimport RestaurantProfile from \"./restaurantProfile\";\r\nimport RestaurantMeals from \"./restaurantMeals\";\r\nimport UserRegister from \"./userRegister\";\r\nimport RestaurantRegister from \"./restaurantRegister\";\r\nimport NotFound from \"./notFound\";\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    const user = await getLoggedInUser();\r\n\r\n    setUser(user);\r\n  }, []);\r\n\r\n  return user ? (\r\n    <UserContext.Provider value={[user, setUser]}>\r\n      {user.isAuthenticated && <HeaderBar />}\r\n      <Container style={{ marginTop: \"110px\" }}>\r\n        <Switch>\r\n          <ProtectedRoute type=\"redirect\" path=\"/\" exact />\r\n          <ProtectedRoute\r\n            type=\"user\"\r\n            path=\"/restaurants\"\r\n            component={Main}\r\n            exact\r\n          />\r\n          <ProtectedRoute\r\n            type=\"user\"\r\n            path=\"/restaurant/:restaurantId\"\r\n            component={Meals}\r\n            exact\r\n          />\r\n          <ProtectedRoute\r\n            type=\"user\"\r\n            path=\"/checkout\"\r\n            component={Checkout}\r\n            exact\r\n          />\r\n          <ProtectedRoute\r\n            type=\"restaurant\"\r\n            path=\"/meals\"\r\n            component={RestaurantMeals}\r\n            exact\r\n          />\r\n          <ProtectedRoute path=\"/orders\" component={Orders} exact />\r\n          <ProtectedRoute\r\n            path=\"/profile\"\r\n            component={user.type === \"user\" ? UserProfile : RestaurantProfile}\r\n            exact\r\n          />\r\n\r\n          <Route path=\"/login\" component={Login} exact />\r\n          <Route path=\"/register_user\" component={UserRegister} exact />\r\n          <Route\r\n            path=\"/register_restaurant\"\r\n            component={RestaurantRegister}\r\n            exact\r\n          />\r\n          <Route path=\"*\" component={NotFound} />\r\n        </Switch>\r\n      </Container>\r\n    </UserContext.Provider>\r\n  ) : (\r\n    <div />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}